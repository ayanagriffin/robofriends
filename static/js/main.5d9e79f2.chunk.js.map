{"version":3,"sources":["components/SearchBox.js","components/Card/Card.js","components/Card/CardList.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Card","name","email","id","src","alt","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAiBeA,EAfG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEhB,OACI,qBAAKC,UAAU,UAAf,SACI,uBACIA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAWJ,OCMZK,G,MAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKP,UAAU,sDAAf,UACI,qBAAKQ,IAAG,+BAA0BD,EAA1B,iBAA6CE,IAAI,WACzD,gCACI,6BAAKJ,IACL,4BAAIC,YCgBLI,EAtBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAKhB,OACI,8BACMA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACI,cAAC,EAAD,CAEIP,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZK,EAAOG,GAAGP,UCHxBQ,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACMJ,EAAMK,aCaLC,E,kDAfX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAMnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAOG,KAAKJ,MAAMC,SAAW,0DAAoCG,KAAKX,MAAMK,a,GAZzDQ,aCqDZC,EAhDf,kDACI,aAAe,IAAD,8BACV,gBAgBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAhB1C,EAAKZ,MAAQ,CACTZ,OAAQ,GACRsB,YAAa,IAJP,EADlB,qDASI,WAAqB,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKZ,SAAS,CAAEjB,OAAQ6B,SAbxC,oBAsBI,WAAU,IAAD,EAC2Bb,KAAKJ,MAA7BZ,EADH,EACGA,OAAQsB,EADX,EACWA,YACVQ,EAAiB9B,EAAO+B,QAAO,SAAAC,GACjC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAASZ,EAAYW,kBAGzD,OAAQjC,EAAOmC,OAGP,sBAAK9C,UAAU,KAAf,UACI,oBAAIA,UAAU,QAAd,yBACA,cAAC,EAAD,CAAWD,aAAc4B,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUpB,OAAQ8B,WAPlC,oBAAIzC,UAAU,KAAd,mCA7BZ,GAAyB6B,aCKVkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5d9e79f2.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n\n    return (\n        <div className='ma4 pa2'>\n            <input \n                className='pa3 ba b--green bg-lightest-blue'\n                type='search' \n                placeholder='search robots'\n                onChange={ searchChange }\n            />\n        </div>\n    );\n\n}\n\nexport default SearchBox;","import React from 'react';\nimport './Card.css';\n\nconst Card = ({ name, email, id }) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img src={`https://robohash.org/${id}?size=200x200`} alt='robots'/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n\n    // if(true){\n    //     throw new Error('nooo!');\n    // }\n    return (\n        <div>\n            { robots.map((user, i) => {\n                return (\n                    <Card\n                        key={robots[i].id}\n                        id={robots[i].id}\n                        name={robots[i].name}\n                        email={robots[i].email}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '600px'}}>\n            { props.children }\n        </div>\n    );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false,\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true });\n    }\n    \n    render() {\n        return this.state.hasError ? <h1>Oops! There is an error!</h1> : this.props.children;\n    }\n}\n\nexport default ErrorBoundry;\n\n","import React, { Component } from 'react';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/Card/CardList';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nexport class App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => {\n                this.setState({ robots: users });\n            });\n\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value });\n\n    }\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n\n        return !robots.length ?\n            <h1 className='tc'>Loading Robots...</h1> :\n            (\n                <div className='tc'>\n                    <h1 className='tc f1'>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots} />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n\n            );\n    }\n\n}\n    \n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}